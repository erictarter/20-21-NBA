[{"/Users/erictarter/Desktop/my-apps/nba-predictions/src/index.js":"1","/Users/erictarter/Desktop/my-apps/nba-predictions/src/reportWebVitals.js":"2","/Users/erictarter/Desktop/my-apps/nba-predictions/src/App.js":"3","/Users/erictarter/Desktop/my-apps/nba-predictions/src/components/Header.js":"4","/Users/erictarter/Desktop/my-apps/nba-predictions/src/components/context/Context.js":"5","/Users/erictarter/Desktop/my-apps/nba-predictions/src/components/PickWC.js":"6","/Users/erictarter/Desktop/my-apps/nba-predictions/src/components/PickEC.js":"7","/Users/erictarter/Desktop/my-apps/nba-predictions/src/components/Review.js":"8","/Users/erictarter/Desktop/my-apps/nba-predictions/src/components/EditWest.js":"9"},{"size":501,"mtime":1608393290000,"results":"10","hashOfConfig":"11"},{"size":362,"mtime":1608392584000,"results":"12","hashOfConfig":"11"},{"size":502,"mtime":1608704232000,"results":"13","hashOfConfig":"11"},{"size":3922,"mtime":1608709133000,"results":"14","hashOfConfig":"11"},{"size":715,"mtime":1608506903000,"results":"15","hashOfConfig":"11"},{"size":7203,"mtime":1608744980000,"results":"16","hashOfConfig":"11"},{"size":8412,"mtime":1608745076000,"results":"17","hashOfConfig":"11"},{"size":4193,"mtime":1608826157000,"results":"18","hashOfConfig":"11"},{"size":673,"mtime":1608740462000,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"td7c76",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"22"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"22"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"22"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"22"},"/Users/erictarter/Desktop/my-apps/nba-predictions/src/index.js",[],["44","45"],"/Users/erictarter/Desktop/my-apps/nba-predictions/src/reportWebVitals.js",[],"/Users/erictarter/Desktop/my-apps/nba-predictions/src/App.js",[],"/Users/erictarter/Desktop/my-apps/nba-predictions/src/components/Header.js",["46","47","48","49","50"],"// import { Spring } from 'react-spring';\nimport React, { useState, useContext } from 'react';\nimport { Context } from './context/Context';\nimport { useSpring, animated } from 'react-spring';\nimport SpringList from 'react-spring-dnd';\n\nconst calc = (x, y) => [\n  -(y - window.innerHeight / 2) / 20,\n  (x - window.innerWidth / 2) / 20,\n  1.1\n];\nconst trans = (x, y, s) =>\n  `perspective(600px) rotateX(${x}deg) rotateY(${y}deg) scale(${s})`;\n\nexport const Header = () => {\n  let globalContext = useContext(Context);\n\n  // NAME STATE\n  const [name, setName] = useState('');\n  // START BUTTON ANIMATION\n  const [state, toggle] = useState(false);\n  const { x } = useSpring({\n    from: { x: 0 },\n    x: state ? 1 : 0,\n    config: { duration: 1000 }\n  });\n\n  const [props, set] = useSpring(() => ({\n    xys: [0, 0, 1],\n    config: { mass: 5, tension: 350, friction: 40 }\n  }));\n\n  const [showMessage1, setMessage1, stopMessage1] = useSpring(() => ({\n    top: '-6rem'\n  }));\n  const [\n    removeStartScreen,\n    setRemoveStartScreen,\n    stopRemoveStartScreen\n  ] = useSpring(() => ({\n    display: 'block'\n  }));\n\n  //   const fadeIn = useSpring({\n  //     config: { duration: 250 },\n  //     from: { opacity: 1 },\n  //     to: { opacity: 1 }\n  //   });\n\n  const startNext = () => {\n    if (name !== '') {\n      setTimeout(() => {\n        document.getElementById('starting-screen').classList.add('clear');\n      }, 1000);\n      setTimeout(() => {\n        document.getElementById('wc-container').classList.add('show');\n        document.getElementById('starting-screen').style.display = 'none';\n      }, 2000);\n      // globalContext.setUserName(name);\n      globalContext.userName = name;\n      console.log(globalContext);\n    } else {\n      setMessage1({ top: '-0.5rem' });\n      setTimeout(() => {\n        setMessage1({ top: '-6rem' });\n      }, 2000);\n    }\n  };\n\n  return (\n    <div>\n      <div className='starting-screen' id='starting-screen'>\n        <animated.div style={showMessage1} className='message-1' id='message-1'>\n          Enter A Name to Continue\n        </animated.div>\n        <div className='intro-container'>\n          <div className='year intro-item'>\n            <h1>2020-2021</h1>\n          </div>\n          <animated.div\n            className='nba-logo intro-item'\n            onMouseMove={({ clientX: x, clientY: y }) =>\n              set({ xys: calc(x, y) })\n            }\n            onMouseLeave={() => set({ xys: [0, 0, 1] })}\n            style={{ transform: props.xys.interpolate(trans) }}\n          ></animated.div>\n          <div className='part-3 intro-item'>\n            <h1>Predictions</h1>\n          </div>\n        </div>\n        <div className='start'>\n          <div className='empty'></div>\n          <input\n            type='text'\n            placeholder='Enter Name'\n            className='enter-name intro-item'\n            onChange={e => {\n              setName(e.target.value);\n            }}\n          ></input>\n          <div\n            onClick={() => {\n              toggle(!state);\n              startNext();\n            }}\n          >\n            <animated.button\n              className='start-btn intro-item'\n              style={{\n                //   opacity: x.interpolate({ range: [0, 1], output: [0.3, 1] }),\n                transform: x\n                  .interpolate({\n                    range: [0, 0.25, 0.35, 0.45, 0.55, 0.65, 0.75, 1],\n                    output: [1, 0.97, 0.9, 1.1, 0.9, 1.1, 1.03, 1]\n                  })\n                  .interpolate(x => `scale(${x})`)\n              }}\n            >\n              Start\n            </animated.button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\nexport default Header;\n\n//  START BUTTON DOESNT SHOW ON MOBILE VP UNLESS SCROLL OR INPUT SELEECT\n// CHANGE INTRO FOR MOBILE\n\n// MAKE REVIEW PAGE WITH EDIT OPTION & FINALIZE BUTTON\n// TRY DRAGGABLE LIST AT END TO EDIT\n\n// CONFIRM MESSAGE TO END\n","/Users/erictarter/Desktop/my-apps/nba-predictions/src/components/context/Context.js",[],"/Users/erictarter/Desktop/my-apps/nba-predictions/src/components/PickWC.js",["51","52"],"import React, { useState, useContext } from 'react';\nimport { Context } from './context/Context';\nimport { useSpring, animated } from 'react-spring';\n\nconst calc = (x, y) => [\n  //   -(y - window.innerHeight / 10) / 20,\n  //   (x - window.innerWidth / 10) / 20,\n  1,\n  1,\n  1.05\n];\nconst trans = (x, y, s) =>\n  `perspective(600px) rotateX(${x}deg) rotateY(${y}deg) scale(${s})`;\n\nexport const PickWC = () => {\n  let globalContext = useContext(Context);\n\n  const [picks, setPicks] = useState([]);\n\n  const [state, toggle] = useState(false);\n  const { x } = useSpring({\n    from: { x: 0 },\n    x: state ? 1 : 0,\n    config: { duration: 1000 }\n  });\n\n  const [props, set] = useSpring(() => ({\n    xys: [0, 0, 1],\n    config: { mass: 5, tension: 50, friction: 20 }\n  }));\n\n  const addWcTeam = e => {\n    if (wcTeams.length < 8 && !e.target.classList.contains('clear')) {\n      wcTeams.push(e.target.id.split(' ')[0]);\n      document.getElementById('pick-num').innerText = `Pick #${8 -\n        wcTeams.length} Seed`;\n      e.target.classList.add('clear');\n\n      setTimeout(() => {\n        e.target.style.background = '';\n      }, 500);\n      if (wcTeams.length === 8) {\n        document.querySelector('.east-btn').classList.add('show');\n        document.getElementById('pick-num').innerText = `Pick East`;\n        globalContext.westPicks = wcTeams;\n        console.log(globalContext);\n      }\n    }\n  };\n\n  const pickEast = () => {\n    setTimeout(() => {\n      document.getElementById('wc-container').classList.add('clear');\n    }, 1000);\n    setTimeout(() => {\n      document.getElementById('ec-container').classList.add('show');\n      document.getElementById('wc-container').style.display = 'none';\n    }, 2000);\n  };\n\n  const growLogo = e => {\n    e.target.classList.add('grow');\n  };\n  const shrinkLogo = e => {\n    e.target.classList.remove('grow');\n  };\n\n  let wcTeams = [];\n\n  return (\n    <div>\n      <div className='wc-container' id='wc-container'>\n        <div className='line'></div>\n        <div className='background-change'></div>\n        <div className='wc-top'>\n          <div className='wc-logo'></div>\n          <div className='wc-seed'>\n            <h1 id='pick-num'>Pick #8 Seed</h1>\n          </div>\n        </div>\n        <div className='lower-section'>\n          <animated.div\n            className='wc-teams'\n            onMouseMove={({ clientX: x, clientY: y }) =>\n              set({ xys: calc(x, y) })\n            }\n            onMouseLeave={() => set({ xys: [0, 0, 1] })}\n            style={{ transform: props.xys.interpolate(trans) }}\n          >\n            <div\n              onMouseOver={growLogo}\n              onMouseLeave={shrinkLogo}\n              onClick={addWcTeam}\n              className='spurs wc-team'\n              id='spurs wc-team'\n            >\n              spurs\n            </div>\n            <div\n              onMouseOver={growLogo}\n              onMouseLeave={shrinkLogo}\n              onClick={addWcTeam}\n              className='clippers wc-team'\n              id='clippers wc-team'\n            >\n              clipper\n            </div>\n            <div\n              onMouseOver={growLogo}\n              onMouseLeave={shrinkLogo}\n              onClick={addWcTeam}\n              className='suns wc-team'\n              id='suns wc-team'\n            >\n              suns\n            </div>\n            <div\n              onMouseOver={growLogo}\n              onMouseLeave={shrinkLogo}\n              onClick={addWcTeam}\n              className='timberwolves wc-team'\n              id='timberwolves wc-team'\n            >\n              timber\n            </div>\n            <div\n              onMouseOver={growLogo}\n              onMouseLeave={shrinkLogo}\n              onClick={addWcTeam}\n              className='blazers wc-team'\n              id='blazers wc-team'\n            >\n              blazers\n            </div>\n            <div\n              onMouseOver={growLogo}\n              onMouseLeave={shrinkLogo}\n              onClick={addWcTeam}\n              className='thunder wc-team'\n              id='thunder wc-team'\n            >\n              thunder\n            </div>\n            <div\n              onMouseOver={growLogo}\n              onMouseLeave={shrinkLogo}\n              onClick={addWcTeam}\n              className='kings wc-team'\n              id='kings wc-team'\n            >\n              kings\n            </div>\n            <div\n              onMouseOver={growLogo}\n              onMouseLeave={shrinkLogo}\n              onClick={addWcTeam}\n              className='nuggets wc-team'\n              id='nuggets wc-team'\n            >\n              nuggets\n            </div>\n            <div\n              onMouseOver={growLogo}\n              onMouseLeave={shrinkLogo}\n              onClick={addWcTeam}\n              className='mavericks wc-team'\n              id='mavericks wc-team'\n            >\n              maverik\n            </div>\n            <div\n              onMouseOver={growLogo}\n              onMouseLeave={shrinkLogo}\n              onClick={addWcTeam}\n              className='rockets wc-team'\n              id='rockets wc-team'\n            >\n              rockets\n            </div>\n            <div\n              onMouseOver={growLogo}\n              onMouseLeave={shrinkLogo}\n              onClick={addWcTeam}\n              className='warriors wc-team'\n              id='warriors wc-team'\n            >\n              worrior\n            </div>{' '}\n            <div\n              onMouseOver={growLogo}\n              onMouseLeave={shrinkLogo}\n              onClick={addWcTeam}\n              className='pelicans wc-team'\n              id='pelicans wc-team'\n            >\n              pelican\n            </div>\n            <div\n              onMouseOver={growLogo}\n              onMouseLeave={shrinkLogo}\n              onClick={addWcTeam}\n              className='grizzlies wc-team'\n              id='grizzlies wc-team'\n            >\n              Grizzli\n            </div>{' '}\n            <div\n              onMouseOver={growLogo}\n              onMouseLeave={shrinkLogo}\n              onClick={addWcTeam}\n              className='jazz wc-team'\n              id='jazz wc-team'\n            >\n              Jazz\n            </div>{' '}\n            <div\n              onMouseOver={growLogo}\n              onMouseLeave={shrinkLogo}\n              onClick={addWcTeam}\n              className='lakers wc-team'\n              id='lakers wc-team'\n            >\n              Lakers\n            </div>\n          </animated.div>\n        </div>\n\n        <div\n          onClick={() => {\n            toggle(!state);\n            pickEast();\n          }}\n        >\n          <animated.button\n            className='east-btn'\n            style={{\n              //   opacity: x.interpolate({ range: [0, 1], output: [0.3, 1] }),\n              transform: x\n                .interpolate({\n                  range: [0, 0.25, 0.35, 0.45, 0.55, 0.65, 0.75, 1],\n                  output: [1, 0.97, 0.9, 1.1, 0.9, 1.1, 1.03, 1]\n                })\n                .interpolate(x => `scale(${x})`)\n            }}\n          >\n            Pick East\n          </animated.button>\n        </div>\n      </div>\n    </div>\n  );\n};\nexport default PickWC;\n","/Users/erictarter/Desktop/my-apps/nba-predictions/src/components/PickEC.js",["53","54","55","56","57","58"],"import React, { useState, useContext } from 'react';\nimport { Context } from './context/Context';\nimport { useSpring, animated } from 'react-spring';\n\nconst calc = (x, y) => [\n  //   -(y - window.innerHeight / 10) / 20,\n  //   (x - window.innerWidth / 10) / 20,\n  1,\n  1,\n  1.05\n];\nconst trans = (x, y, s) =>\n  `perspective(600px) rotateX(${x}deg) rotateY(${y}deg) scale(${s})`;\n\nexport const PickEC = () => {\n  let globalContext = useContext(Context);\n\n  const [picks, setPicks] = useState([]);\n\n  const [state, toggle] = useState(false);\n  const { x } = useSpring({\n    from: { x: 0 },\n    x: state ? 1 : 0,\n    config: { duration: 1000 }\n  });\n\n  const [props, set] = useSpring(() => ({\n    xys: [0, 0, 1],\n    config: { mass: 5, tension: 50, friction: 20 }\n  }));\n\n  const addWcTeam = e => {\n    if (ecTeams.length < 8 && !e.target.classList.contains('clear')) {\n      ecTeams.push(e.target.id.split(' ')[0]);\n      document.getElementById('pick-num-2').innerText = `Pick #${8 -\n        ecTeams.length} Seed`;\n      e.target.classList.add('clear');\n      setTimeout(() => {\n        // e.target.style.display = 'none';\n      }, 500);\n      if (ecTeams.length === 8) {\n        document.querySelector('.review-btn').classList.add('show');\n        document.getElementById('pick-num-2').innerText = `Review Predictions`;\n        globalContext.eastPicks = ecTeams;\n      }\n    }\n  };\n\n  const toReview = () => {\n    setTimeout(() => {\n      document.getElementById('ec-container').classList.add('clear');\n    }, 1000);\n    setTimeout(() => {\n      document.getElementById('review-container').classList.add('show');\n      document.getElementById('ec-container').style.display = 'none';\n    }, 2000);\n    setTimeout(() => {\n      globalContext.eastPicksFill.map((i, index) => {\n        i.classList.remove('clear');\n        document.getElementById('ec-review').innerHTML += `\n        <div class='review-team'>${globalContext.eastPicks[\n          7 - index\n        ].toUpperCase()}</div>\n        `;\n      });\n      globalContext.westPicksFill.map((i, index) => {\n        i.classList.remove('clear');\n        document.getElementById('wc-review').innerHTML += `\n        <div class='review-team'>${globalContext.westPicks[\n          7 - index\n        ].toUpperCase()}</div>\n        `;\n      });\n    }, 2100);\n\n    let eastFill = [];\n    globalContext.eastPicks.map(i => {\n      document.querySelectorAll('.ec-team').forEach(team => {\n        if (team.classList.contains(i)) {\n          eastFill.push(team);\n        }\n      });\n    });\n    let westFill = [];\n    globalContext.westPicks.map(i => {\n      document.querySelectorAll('.wc-team').forEach(team => {\n        if (team.classList.contains(i)) {\n          westFill.push(team);\n        }\n      });\n    });\n    globalContext.westPicksFill = westFill;\n    globalContext.eastPicksFill = eastFill;\n  };\n\n  const growLogo = e => {\n    e.target.classList.add('grow');\n  };\n  const shrinkLogo = e => {\n    e.target.classList.remove('grow');\n  };\n\n  let ecTeams = [];\n\n  return (\n    <div>\n      <div className='ec-container' id='ec-container'>\n        <div className='line-2'></div>\n        <div className='background-change-2'></div>\n        <div className='wc-top'>\n          <div className='ec-logo'></div>\n          <div className='wc-seed'>\n            <h1 className='pick-num-2' id='pick-num-2'>\n              Pick #8 Seed\n            </h1>\n          </div>\n        </div>\n        <div className='lower-section-2'>\n          <animated.div\n            className='ec-teams'\n            onMouseMove={({ clientX: x, clientY: y }) =>\n              set({ xys: calc(x, y) })\n            }\n            onMouseLeave={() => set({ xys: [0, 0, 1] })}\n            style={{ transform: props.xys.interpolate(trans) }}\n          >\n            <div\n              onMouseOver={growLogo}\n              onMouseLeave={shrinkLogo}\n              onClick={addWcTeam}\n              className='bucks ec-team'\n              id='bucks ec-team'\n            >\n              bucks\n            </div>\n            <div\n              onMouseOver={growLogo}\n              onMouseLeave={shrinkLogo}\n              onClick={addWcTeam}\n              className='pacers ec-team'\n              id='pacers ec-team'\n            >\n              pacers\n            </div>\n            <div\n              onMouseOver={growLogo}\n              onMouseLeave={shrinkLogo}\n              onClick={addWcTeam}\n              className='celtics ec-team'\n              id='celtics ec-team'\n            >\n              celtics\n            </div>\n            <div\n              onMouseOver={growLogo}\n              onMouseLeave={shrinkLogo}\n              onClick={addWcTeam}\n              className='wizards ec-team'\n              id='wizards ec-team'\n            >\n              wizards\n            </div>\n            <div\n              onMouseOver={growLogo}\n              onMouseLeave={shrinkLogo}\n              onClick={addWcTeam}\n              className='hornets ec-team'\n              id='hornets ec-team'\n            >\n              hornets\n            </div>\n            <div\n              onMouseOver={growLogo}\n              onMouseLeave={shrinkLogo}\n              onClick={addWcTeam}\n              className='heat ec-team'\n              id='heat ec-team'\n            >\n              heat\n            </div>\n            <div\n              onMouseOver={growLogo}\n              onMouseLeave={shrinkLogo}\n              onClick={addWcTeam}\n              className='raptors ec-team'\n              id='raptors ec-team'\n            >\n              raptors\n            </div>\n            <div\n              onMouseOver={growLogo}\n              onMouseLeave={shrinkLogo}\n              onClick={addWcTeam}\n              className='magic ec-team'\n              id='magic ec-team'\n            >\n              magic\n            </div>\n            <div\n              onMouseOver={growLogo}\n              onMouseLeave={shrinkLogo}\n              onClick={addWcTeam}\n              className='caviliers ec-team'\n              id='caviliers ec-team'\n            >\n              cavili\n            </div>\n            <div\n              onMouseOver={growLogo}\n              onMouseLeave={shrinkLogo}\n              onClick={addWcTeam}\n              className='pistons ec-team'\n              id='pistons ec-team'\n            >\n              pistons\n            </div>{' '}\n            <div\n              onMouseOver={growLogo}\n              onMouseLeave={shrinkLogo}\n              onClick={addWcTeam}\n              className='hawks ec-team'\n              id='hawks ec-team'\n            >\n              hawks\n            </div>\n            <div\n              onMouseOver={growLogo}\n              onMouseLeave={shrinkLogo}\n              onClick={addWcTeam}\n              className='knicks ec-team'\n              id='knicks ec-team'\n            >\n              knicks\n            </div>{' '}\n            <div\n              onMouseOver={growLogo}\n              onMouseLeave={shrinkLogo}\n              onClick={addWcTeam}\n              className='bulls ec-team'\n              id='bulls ec-team'\n            >\n              bulls\n            </div>{' '}\n            <div\n              onMouseOver={growLogo}\n              onMouseLeave={shrinkLogo}\n              onClick={addWcTeam}\n              className='sixers ec-team'\n              id='sixers ec-team'\n            >\n              Sixers\n            </div>\n            <div\n              onMouseOver={growLogo}\n              onMouseLeave={shrinkLogo}\n              onClick={addWcTeam}\n              className='nets ec-team'\n              id='nets ec-team'\n            >\n              Nets\n            </div>\n          </animated.div>\n        </div>\n\n        <div\n          onClick={() => {\n            toggle(!state);\n            toReview();\n          }}\n        >\n          <animated.button\n            className='review-btn'\n            style={{\n              //   opacity: x.interpolate({ range: [0, 1], output: [0.3, 1] }),\n              transform: x\n                .interpolate({\n                  range: [0, 0.25, 0.35, 0.45, 0.55, 0.65, 0.75, 1],\n                  output: [1, 0.97, 0.9, 1.1, 0.9, 1.1, 1.03, 1]\n                })\n                .interpolate(x => `scale(${x})`)\n            }}\n          >\n            Review <i className='fas fa-arrow-right'></i>\n          </animated.button>\n        </div>\n      </div>\n    </div>\n  );\n};\nexport default PickEC;\n\n// BORDERS STILL RED\n","/Users/erictarter/Desktop/my-apps/nba-predictions/src/components/Review.js",["59","60","61","62","63","64","65","66","67","68","69","70"],"import React, { useState, useContext, useRef } from 'react';\nimport { Context } from './context/Context';\nimport { useSprings, useSpring, animated, interpolate } from 'react-spring';\nimport SpringList from 'react-spring-dnd';\nimport EditWest from './EditWest';\n\nconst fn = (order, down, originalIndex, curIndex, y) => index =>\n  down && index === originalIndex\n    ? {\n        y: curIndex * 100 + y,\n        scale: 1.1,\n        zIndex: '1',\n        shadow: 15,\n        immediate: n => n === 'y' || n === 'zIndex'\n      }\n    : {\n        y: order.indexOf(index) * 100,\n        scale: 1,\n        zIndex: '0',\n        shadow: 1,\n        immediate: false\n      };\n\nexport const Review = () => {\n  const globalContext = useContext(Context);\n\n  const [state, toggle] = useState(true);\n  const { x } = useSpring({\n    from: { x: 0 },\n    x: state ? 1 : 0,\n    config: { duration: 1000 }\n  });\n\n  const editPicks = () => {};\n\n  const submit = e => {\n    // document.getElementById('sub').submit();\n  };\n\n  const clickSubmit = () => {\n    console.log(globalContext);\n    document.getElementById('review-container').classList.add('clear');\n  };\n\n  return (\n    <div>\n      <div className='review-container' id='review-container'>\n        <div className='top-review'>\n          <h1>Review Picks</h1>\n        </div>\n        <div className='picks-container' id='picks-container'>\n          <div className='seeds'>\n            <div className='seed-num'>1</div>\n            <div className='seed-num'>2</div>\n            <div className='seed-num'>3</div>\n            <div className='seed-num'>4</div>\n            <div className='seed-num'>5</div>\n            <div className='seed-num'>6</div>\n            <div className='seed-num'>7</div>\n            <div className='seed-num'>8</div>\n          </div>\n          <div className='seeds-2'>\n            <div className='seed-num'>1</div>\n            <div className='seed-num'>2</div>\n            <div className='seed-num'>3</div>\n            <div className='seed-num'>4</div>\n            <div className='seed-num'>5</div>\n            <div className='seed-num'>6</div>\n            <div className='seed-num'>7</div>\n            <div className='seed-num'>8</div>\n          </div>{' '}\n          <div className='seeds-3'>\n            <div className='seed-num'>1</div>\n            <div className='seed-num'>2</div>\n            <div className='seed-num'>3</div>\n            <div className='seed-num'>4</div>\n            <div className='seed-num'>5</div>\n            <div className='seed-num'>6</div>\n            <div className='seed-num'>7</div>\n            <div className='seed-num'>8</div>\n          </div>\n          <div className='wc-review' id='wc-review'></div>\n          <div className='ec-review' id='ec-review'></div>\n        </div>\n\n        {/* <form name='contact' method='POST' netlify netlify-honeypot='bot-field'>\n          <input\n            type='text'\n            id='name'\n            value={globalContext.userName}\n            onChange={e => {\n              globalContext.userName = e.target.value;\n            }}\n          />\n          <button type='submit'>\n            <div onClick={() => toggle(!state)}>\n              <animated.input\n                onClick={clickSubmit}\n                onSubmit={submit}\n                type='submit'\n                className='submit-btn'\n                style={{\n                  //   opacity: x.interpolate({ range: [0, 1], output: [0.3, 1] }),\n                  transform: x\n                    .interpolate({\n                      range: [0, 0.25, 0.35, 0.45, 0.55, 0.65, 0.75, 1],\n                      output: [1, 0.97, 0.9, 1.1, 0.9, 1.1, 1.03, 1]\n                    })\n                    .interpolate(x => `scale(${x})`)\n                }}\n                submit\n              />\n            </div>\n          </button>\n        </form> */}\n        <form name='contact' method='post'>\n          <p>\n            <label>\n              Your Name: <input type='text' name='name' />\n            </label>\n          </p>\n          <p>\n            <button type='submit'>Send</button>\n          </p>\n        </form>\n      </div>\n    </div>\n  );\n};\nexport default Review;\n\n// FORM SUBMISSION\n// THANK YOU COMP\n","/Users/erictarter/Desktop/my-apps/nba-predictions/src/components/EditWest.js",["71","72"],"import React, { useState, useContext } from 'react';\nimport { Context } from './context/Context';\nimport SpringList from 'react-spring-dnd';\n\nexport const EditWest = ({ items }) => {\n  const globalContext = useContext(Context);\n  let wcTeamList = [\n    'Spurs',\n    'Suns',\n    'Clippers',\n    'Timberwolves',\n    'Blazers',\n    'Thunder',\n    'Kings',\n    'Nuggets',\n    'Mavericks',\n    'Rockets',\n    'Warriors',\n    'Pelicans',\n    'Grizzlies',\n    'Jazz',\n    'Lakers'\n  ];\n  return (\n    <div>\n      <div className='wc-edit' id='wc-edit'>\n        <SpringList>{globalContext.westPicks.map(i => i)}</SpringList>\n      </div>\n    </div>\n  );\n};\nexport default EditWest;\n",{"ruleId":"73","replacedBy":"74"},{"ruleId":"75","replacedBy":"76"},{"ruleId":"77","severity":1,"message":"78","line":5,"column":8,"nodeType":"79","messageId":"80","endLine":5,"endColumn":18},{"ruleId":"77","severity":1,"message":"81","line":33,"column":37,"nodeType":"79","messageId":"80","endLine":33,"endColumn":49},{"ruleId":"77","severity":1,"message":"82","line":37,"column":5,"nodeType":"79","messageId":"80","endLine":37,"endColumn":22},{"ruleId":"77","severity":1,"message":"83","line":38,"column":5,"nodeType":"79","messageId":"80","endLine":38,"endColumn":25},{"ruleId":"77","severity":1,"message":"84","line":39,"column":5,"nodeType":"79","messageId":"80","endLine":39,"endColumn":26},{"ruleId":"77","severity":1,"message":"85","line":18,"column":10,"nodeType":"79","messageId":"80","endLine":18,"endColumn":15},{"ruleId":"77","severity":1,"message":"86","line":18,"column":17,"nodeType":"79","messageId":"80","endLine":18,"endColumn":25},{"ruleId":"77","severity":1,"message":"85","line":18,"column":10,"nodeType":"79","messageId":"80","endLine":18,"endColumn":15},{"ruleId":"77","severity":1,"message":"86","line":18,"column":17,"nodeType":"79","messageId":"80","endLine":18,"endColumn":25},{"ruleId":"87","severity":1,"message":"88","line":58,"column":50,"nodeType":"89","messageId":"90","endLine":58,"endColumn":52},{"ruleId":"87","severity":1,"message":"88","line":66,"column":50,"nodeType":"89","messageId":"90","endLine":66,"endColumn":52},{"ruleId":"87","severity":1,"message":"88","line":77,"column":35,"nodeType":"89","messageId":"90","endLine":77,"endColumn":37},{"ruleId":"87","severity":1,"message":"88","line":85,"column":35,"nodeType":"89","messageId":"90","endLine":85,"endColumn":37},{"ruleId":"77","severity":1,"message":"91","line":1,"column":39,"nodeType":"79","messageId":"80","endLine":1,"endColumn":45},{"ruleId":"77","severity":1,"message":"92","line":3,"column":10,"nodeType":"79","messageId":"80","endLine":3,"endColumn":20},{"ruleId":"77","severity":1,"message":"93","line":3,"column":33,"nodeType":"79","messageId":"80","endLine":3,"endColumn":41},{"ruleId":"77","severity":1,"message":"94","line":3,"column":43,"nodeType":"79","messageId":"80","endLine":3,"endColumn":54},{"ruleId":"77","severity":1,"message":"78","line":4,"column":8,"nodeType":"79","messageId":"80","endLine":4,"endColumn":18},{"ruleId":"77","severity":1,"message":"95","line":5,"column":8,"nodeType":"79","messageId":"80","endLine":5,"endColumn":16},{"ruleId":"77","severity":1,"message":"96","line":7,"column":7,"nodeType":"79","messageId":"80","endLine":7,"endColumn":9},{"ruleId":"77","severity":1,"message":"97","line":27,"column":17,"nodeType":"79","messageId":"80","endLine":27,"endColumn":23},{"ruleId":"77","severity":1,"message":"98","line":28,"column":11,"nodeType":"79","messageId":"80","endLine":28,"endColumn":12},{"ruleId":"77","severity":1,"message":"99","line":34,"column":9,"nodeType":"79","messageId":"80","endLine":34,"endColumn":18},{"ruleId":"77","severity":1,"message":"100","line":36,"column":9,"nodeType":"79","messageId":"80","endLine":36,"endColumn":15},{"ruleId":"77","severity":1,"message":"101","line":40,"column":9,"nodeType":"79","messageId":"80","endLine":40,"endColumn":20},{"ruleId":"77","severity":1,"message":"102","line":1,"column":17,"nodeType":"79","messageId":"80","endLine":1,"endColumn":25},{"ruleId":"77","severity":1,"message":"103","line":7,"column":7,"nodeType":"79","messageId":"80","endLine":7,"endColumn":17},"no-native-reassign",["104"],"no-negated-in-lhs",["105"],"no-unused-vars","'SpringList' is defined but never used.","Identifier","unusedVar","'stopMessage1' is assigned a value but never used.","'removeStartScreen' is assigned a value but never used.","'setRemoveStartScreen' is assigned a value but never used.","'stopRemoveStartScreen' is assigned a value but never used.","'picks' is assigned a value but never used.","'setPicks' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'useRef' is defined but never used.","'useSprings' is defined but never used.","'animated' is defined but never used.","'interpolate' is defined but never used.","'EditWest' is defined but never used.","'fn' is assigned a value but never used.","'toggle' is assigned a value but never used.","'x' is assigned a value but never used.","'editPicks' is assigned a value but never used.","'submit' is assigned a value but never used.","'clickSubmit' is assigned a value but never used.","'useState' is defined but never used.","'wcTeamList' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]